{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "cass-api-postgres",
        "annotations": {
            "openshift.io/display-name": "CASS API + PostGres",
            "description": "CASS Api ontop of Postgresql",
            "iconClass": "icon-postgresql",
            "tags": "database,postgresql"
        }
    },
    "message": "The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n   Username: ${POSTGRESQL_USER}\n       Password: ${POSTGRESQL_PASSWORD}\n  Database Name: ${POSTGRESQL_DATABASE}\n Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.",
    "labels": {
        "template": "cass-api-template"
    },
    "objects": [{
            "kind": "Secret",
            "apiVersion": "v1",
            "metadata": {
                "name": "${API_SERVICE_NAME}",
                "annotations": {
                    "template.openshift.io/expose-user": "{.data['api-user']}",
                    "template.openshift.io/expose-password": "{.data['api-password']}"
                },
                "labels": {
                    "app": "${API_SERVICE_NAME}"
                }
            },
            "stringData": {
                "api-user": "${API_DATABASE_USER}",
                "api-password": "${API_DATABASE_PASS}"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${API_SERVICE_NAME}",
                "labels": {
                    "app": "${API_SERVICE_NAME}"
                }
            },
            "spec": {
                "ports": [{
                    "name": "api-port",
                    "protocol": "TCP",
                    "port": 8080,
                    "targetPort": 8080
                }],
                "selector": {
                    "app": "${API_SERVICE_NAME}"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${API_SERVICE_NAME}",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "app": "${API_SERVICE_NAME}"
                },
                "annotations": {}
            },
            "spec": {
                "strategy": {
                    "type": "Recreate",
                    "recreateParams": {
                        "timeoutSeconds": 600,
                        "mid": {
                            "failurePolicy": "Retry",
                            "execNewPod": {
                                "command": [
                                    "/opt/app-root/src/database/migrate-db.sh"
                                ],
                                "env": [{
                                        "name": "LIQUIBASE_CONTEXTS",
                                        "value": "${API_DATA_CONTEXTS}"
                                    },
                                    {
                                        "name": "PG_DATABASE",
                                        "value": "${POSTGRESQL_DATABASE}"
                                    },
                                    {
                                        "name": "PG_ADMIN_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "${DATABASE_SERVICE_NAME}",
                                                "key": "database-admin-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PG_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "${API_SERVICE_NAME}",
                                                "key": "api-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PG_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "${API_SERVICE_NAME}",
                                                "key": "api-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PG_DEFAULT_SCHEMA",
                                        "value": "${DATABASE_DEFAULT_SCHEMA}"
                                    },
                                    {
                                        "name": "API_DATABASE_SCHEMA",
                                        "value": "${API_DATABASE_SCHEMA}"
                                    }
                                ],
                                "containerName": "${API_SERVICE_NAME}"
                            }
                        }
                    },
                    "resources": {
                        "limits": {
                            "memory": "${API_MEMORY_LIMIT}",
                            "cpu": "${API_CPU_LIMIT}"
                        }
                    }
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${API_SERVICE_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${API_IMAGE_STREAM}:latest",
                                "namespace": "${API_IMAGE_NAMESPACE}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "app": "${API_SERVICE_NAME}"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "${API_SERVICE_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "${API_SERVICE_NAME}",
                            "image": " ",
                            "ports": [{
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }],
                            "env": [{
                                    "name": "API_DATABASE_SCHEMA",
                                    "value": "${API_DATABASE_SCHEMA}"
                                },
                                {
                                    "name": "PGHOST",
                                    "value": "${DATABASE_SERVICE_NAME}"
                                },
                                {
                                    "name": "PGUSER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${API_SERVICE_NAME}",
                                            "key": "api-user"
                                        }
                                    }
                                },
                                {
                                    "name": "PGPASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${API_SERVICE_NAME}",
                                            "key": "api-password"
                                        }
                                    }
                                },
                                {
                                    "name": "PGDATABASE",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-name"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "${API_MEMORY_LIMIT}",
                                    "cpu": "${API_CPU_LIMIT}"
                                }
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "${API_SERVICE_NAME}",
                "creationTimestamp": null,
                "annotations": {
                    "openshift.io/host.generated": "true"
                },
                "labels": {
                    "app": "${API_SERVICE_NAME}"
                }
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "${API_SERVICE_NAME}",
                    "weight": 100
                },
                "port": {
                    "targetPort": "api-port"
                },
                "tls": {
                    "termination": "edge",
                    "insecureEdgeTerminationPolicy": "Redirect"
                },
                "wildcardPolicy": "None"
            },
            "status": {}
        },
        {
            "kind": "Secret",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.openshift.io/expose-username": "{.data['database-user']}",
                    "template.openshift.io/expose-password": "{.data['database-password']}",
                    "template.openshift.io/expose-admin-password": "{.data['database-admin-password']}",
                    "template.openshift.io/expose-database_name": "{.data['database-name']}"
                },
                "labels": {
                    "app": "${DATABASE_SERVICE_NAME}"
                }
            },
            "stringData": {
                "database-user": "${POSTGRESQL_USER}",
                "database-password": "${POSTGRESQL_PASSWORD}",
                "database-admin-password": "${POSTGRESQL_ADMIN_PASSWORD}",
                "database-name": "${POSTGRESQL_DATABASE}"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.openshift.io/expose-uri": "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
                }
            },
            "spec": {
                "ports": [{
                    "name": "postgresql",
                    "protocol": "TCP",
                    "port": 5432,
                    "targetPort": 5432,
                    "nodePort": 0
                }],
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_VERSION}",
                                "namespace": "${DATABASE_IMAGE_NAMESPACE}"
                            },
                            "lastTriggeredImage": ""
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "${DATABASE_SERVICE_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "postgresql",
                            "image": " ",
                            "ports": [{
                                "containerPort": 5432,
                                "protocol": "TCP"
                            }],
                            "readinessProbe": {
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 5,
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-i",
                                        "-c",
                                        "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                    ]
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-i",
                                        "-c",
                                        "pg_isready -h 127.0.0.1 -p 5432"
                                    ]
                                },
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 30
                            },
                            "env": [{
                                    "name": "POSTGRESQL_USER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-user"
                                        }
                                    }
                                },
                                {
                                    "name": "POSTGRESQL_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-password"
                                        }
                                    }
                                },
                                {
                                    "name": "POSTGRESQL_ADMIN_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-admin-password"
                                        }
                                    }
                                },
                                {
                                    "name": "POSTGRESQL_DATABASE",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-name"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "${DATABASE_MEMORY_LIMIT}"
                                }
                            },
                            "volumeMounts": [{
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/pgsql/data"
                            }],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                                "capabilities": {},
                                "privileged": false
                            }
                        }],
                        "volumes": [{
                            "emptyDir": {
                                "medium": ""
                            },
                            "name": "${DATABASE_SERVICE_NAME}-data"
                        }],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                    }
                }
            },
            "status": {}
        }
    ],
    "parameters": [{
            "name": "API_DATA_CONTEXTS",
            "displayName": "API Data Contexts",
            "description": "The liquibase contexts to include for this environment.  (See [liquibase contexts](http://www.liquibase.org/documentation/contexts.html) for more info)",
            "required": false,
            "value": "prod"
        },
        {
            "name": "API_IMAGE_NAMESPACE",
            "displayName": "Api ImageStream Project",
            "description": "The OpenShift Project where the Api ImageStream resides.",
            "required": true,
            "value": "apndkr-tools"
        },
        {
            "name": "API_IMAGE_STREAM",
            "displayName": "Api Image Stream",
            "description": "The name of the API image stream.",
            "required": true,
            "value": "cass-api"
        },
        {
            "name": "API_SERVICE_NAME",
            "displayName": "Api Service Name",
            "description": "The name of the OpenShift Service exposed for the api.",
            "value": "api",
            "required": true
        },
        {
            "name": "API_DATABASE_SCHEMA",
            "displayName": "API Database Schema",
            "description": "Name of the schema to be used by the Api.",
            "value": "shersched",
            "required": true
        },
        {
            "name": "API_DATABASE_USER",
            "displayName": "API Database User",
            "description": "The name of the database role/user to create for the api.",
            "required": true,
            "value": "shersched"
        },
        {
            "name": "API_DATABASE_PASS",
            "displayName": "API Database User Password",
            "description": "The password for the database user to be used by the api.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}",
            "required": true
        },
        {
            "name": "API_MEMORY_LIMIT",
            "displayName": "API Memory Limit",
            "description": "Maximum amount of memory the API container can use.",
            "value": "512Mi",
            "required": true
        },
        {
            "name": "API_CPU_LIMIT",
            "displayName": "API CPU Limit",
            "description": "Maximum amount of CPU the API container can use.",
            "value": "200m",
            "required": false
        },
        {
            "name": "DATABASE_MEMORY_LIMIT",
            "displayName": "Database Memory Limit",
            "description": "Maximum amount of memory the Database container can use.",
            "value": "400Mi",
            "required": true
        },
        {
            "name": "DATABASE_IMAGE_NAMESPACE",
            "displayName": "Namespace",
            "description": "The OpenShift Namespace where the ImageStream resides.",
            "value": "openshift"
        },
        {
            "name": "DATABASE_SERVICE_NAME",
            "displayName": "Database Service Name",
            "description": "The name of the OpenShift Service exposed for the database.",
            "value": "postgres",
            "required": true
        },
        {
            "name": "DATABASE_DEFAULT_SCHEMA",
            "displayName": "Default database schema",
            "description": "The default schema to use in the database",
            "value": "public",
            "required": true
        },
        {
            "name": "POSTGRESQL_USER",
            "displayName": "PostgreSQL Connection Username",
            "description": "Username for PostgreSQL user that will be used for accessing the database.",
            "generate": "expression",
            "from": "user[A-Z0-9]{3}",
            "required": true
        },
        {
            "name": "POSTGRESQL_PASSWORD",
            "displayName": "PostgreSQL Connection Password",
            "description": "Password for the PostgreSQL connection user.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}",
            "required": true
        },
        {
            "name": "POSTGRESQL_ADMIN_PASSWORD",
            "displayName": "PostgreSQL Admin Password",
            "description": "Password for the PostgreSQL postgres account.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}",
            "required": true
        },
        {
            "name": "POSTGRESQL_DATABASE",
            "displayName": "PostgreSQL Database Name",
            "description": "Name of the PostgreSQL database accessed.",
            "value": "appdb",
            "required": true
        },
        {
            "name": "VOLUME_CAPACITY",
            "displayName": "Volume Capacity",
            "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
            "value": "1024Mi",
            "required": true
        },
        {
            "name": "POSTGRESQL_VERSION",
            "displayName": "Version of PostgreSQL Image",
            "description": "Version of PostgreSQL image to be used (9.4, 9.5 or latest).",
            "value": "9.5",
            "required": true
        },
        {
            "name": "CLAIM_NAME",
            "displayName": "Database Service Name",
            "description": "The name of the OpenShift Service exposed for the database.",
            "value": "",
            "required": false
        }
    ]
}